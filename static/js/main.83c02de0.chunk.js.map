{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.module.css","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Notification","message","className","style","defaultProps","Statistics","good","neutral","bad","total","percentage","list","listItem","FeedbackOptions","options","onLeaveFeedback","buttons","map","option","button","type","name","onClick","Section","title","children","App","state","e","setState","target","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Object","keys","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,SAAW,+B,iBCA7DD,EAAOC,QAAU,CAAC,QAAU,iCAAiC,OAAS,kC,oBCAtED,EAAOC,QAAU,CAAC,QAAU,gC,gBCA5BD,EAAOC,QAAU,CAAC,MAAQ,yB,qKCInBC,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,mBAAGC,UAAWC,IAAMF,QAApB,SAA8BA,KAIlCD,EAAaI,aAAe,CACxBH,QAAS,IASED,Q,gBCMAK,EAtBI,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAC7C,OACE,qBAAIR,UAAWC,IAAMQ,KAArB,UACE,qBAAIT,UAAWC,IAAMS,SAArB,kBAAqCN,KACrC,qBAAIJ,UAAWC,IAAMS,SAArB,qBAAwCL,KACxC,qBAAIL,UAAWC,IAAMS,SAArB,iBAAoCJ,KACpC,qBAAIN,UAAWC,IAAMS,SAArB,mBAAsCH,KACtC,qBAAIP,UAAWC,IAAMS,SAArB,+BAAkDF,EAAlD,W,gBCiBOG,EAzBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAChC,OACI,qBAAKb,UAAWC,IAAMa,QAAtB,SACKF,EAAQG,KAAI,SAACC,GAAD,OACb,wBACThB,UAAWC,IAAMgB,OACRC,KAAK,SAELC,KAAMH,EACNI,QAASP,EALT,SAOCG,GAJIA,S,iBCSFK,EAhBC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,oBAAIvB,UAAWC,IAAMqB,MAArB,SAA6BA,IAC5BC,MC+DQC,E,4MA1DbC,MAAQ,CACNrB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAIPO,gBAAkB,SAACa,GACjB,EAAKC,UAAS,SAACF,GAAD,sBAAeC,EAAEE,OAAOT,KAAOM,EAAMC,EAAEE,OAAOT,MAAQ,O,EAItEU,mBAAqB,WACnB,MAA+B,EAAKJ,MAEpC,OAFA,EAAQrB,KAAR,EAAcC,QAAd,EAAuBC,K,EAMzBwB,gCAAkC,WAChC,IAAQ1B,EAAS,EAAKqB,MAAdrB,KACEG,EAAQ,EAAKsB,qBACnB,OAAOtB,EAAQwB,KAAKC,MAAO5B,EAAOG,EAAS,KAAO,G,4CAIxD,WACE,MAA+B0B,KAAKR,MAA5BrB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQ0B,KAAKJ,qBACbrB,EAAayB,KAAKH,kCACxB,OACE,gCACE,cAAC,EAAD,CAASR,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEV,QAASsB,OAAOC,KAAKF,KAAKR,OAC1BZ,gBAAiBoB,KAAKpB,oBAK1B,cAAC,EAAD,CAASS,MAAO,aAAhB,SACW,IAAVf,EACG,cAAC,EAAD,CAAcR,QAAQ,sBAEvB,cAAC,EAAD,CACDK,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,WAAYA,a,GApDJ4B,aCGJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.83c02de0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3oKT7\",\"listItem\":\"Statistics_listItem__2WUzL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"FeedbackOptions_buttons__2qTWo\",\"button\":\"FeedbackOptions_button__3n-hy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__eciZi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2S6oE\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Notification.module.css';\n\t\n\n\tconst Notification = ({ message }) => (\n\t    <p className={style.message}>{message}</p>\n\t);\n\t\n\n\tNotification.defaultProps = {\n\t    message: '',\n\t};\n\t\n\n\tNotification.propTypes = {\n\t    message: PropTypes.string,\n\t};\n\t\n\n\texport default Notification;\n","import PropTypes from 'prop-types';\nimport style from './Statistics.module.css';\n\t\n\n\tconst Statistics = ({ good, neutral, bad, total, percentage }) => {\n\t    return (\n\t      <ul className={style.list}>\n\t        <li className={style.listItem}>Good:{good}</li>\n\t        <li className={style.listItem}>Neutral:{neutral}</li>\n\t        <li className={style.listItem}>Bad:{bad}</li>\n\t        <li className={style.listItem}>Total:{total}</li>\n\t        <li className={style.listItem}>Positive feedback:{percentage}%</li>\n\t      </ul>\n\t    );\n\t}\n\t\n\n\tStatistics.propTypes = {\n\t  good: PropTypes.number,\n\t  neutral: PropTypes.number,\n\t  bad: PropTypes.number,\n\t  total: PropTypes.number,\n\t  percentage: PropTypes.number,\n\t};\n\t\n\n\texport default Statistics;\n","import PropTypes from 'prop-types';\nimport style from './FeedbackOptions.module.css';\n\n\tconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n\t    return (\n\t        <div className={style.buttons}>\n\t            {options.map((option) => (\n\t            <button\n\t\t\t\tclassName={style.button}\n\t            type=\"button\"\n\t            key={option}\n\t            name={option}\n\t            onClick={onLeaveFeedback}\n\t        >\n\t            {option}\n\t            </button>\n\t        ))}\n\t        </div>\n\t    );\n\t};\n\t\n\n\tFeedbackOptions.propTypes = {\n\t    options: PropTypes.arrayOf(PropTypes.string),\n\t    onLeaveFeedback: PropTypes.func,\n\t};\n\t\n\n\texport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport style from './Section.module.css';\n\n\tconst Section = ({ title, children }) => {\n\t  return (\n\t    <section>\n\t      <h2 className={style.title}>{title}</h2>\n\t      {children}\n\t    </section>\n\t  );\n\t};\n\t\n\n\tSection.propTypes = {\n\t  title: PropTypes.string,\n\t  children: PropTypes.node,\n\t};\n\t\n\n\texport default Section;\n","import { Component } from 'react';\n\t\n\n\timport Notification from './components/Notification/Notification';\n\timport Statistics from './components/Statistics/Statistics';\n\timport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\n\timport Section from './components/Section/Section';\n\t\n\n\tclass App extends Component {\n\t\n\n\t  state = {\n\t    good: 0,\n\t    neutral: 0,\n\t    bad: 0,\n\t  };\n\t\n\n\t  onLeaveFeedback = (e) => {\n\t    this.setState((state) => ({ [e.target.name]: state[e.target.name] + 1 }));\n\t  };\n\t\n\n\t  countTotalFeedback = () => {\n\t    const { good, neutral, bad } = this.state;\n\t    const total = good + neutral + bad;\n\t    return total;\n\t  };\n\t\n\n\t  countPositiveFeedbackPercentage = () => {\n\t    const { good } = this.state;\n\t        const total = this.countTotalFeedback();\n\t        return total ? Math.round((good / total) * 100) : 0;\n\t  };\n\t\n\n\t  render() {\n\t    const { good, neutral, bad } = this.state;\n\t    const total = this.countTotalFeedback();\n\t    const percentage = this.countPositiveFeedbackPercentage();\n\t    return (\n\t      <div>\n\t        <Section title={'Please leave feedback'}>\n\t          <FeedbackOptions\n\t            options={Object.keys(this.state)}\n\t            onLeaveFeedback={this.onLeaveFeedback}\n\t          />\n\t        </Section>\n\t\n\n\t        <Section title={'Statistics'}>\n\t        {total === 0 ? (\n\t            <Notification message=\"No feedback given\" />\n\t          ) : \n\t          (<Statistics\n\t          good={good}\n\t          neutral={neutral}\n\t          bad={bad}\n\t          total={total}\n\t          percentage={percentage}\n\t        />)}\n          </Section>\n\t      </div>\n\t    );\n\t  }\n\t}\n\t\n\n\texport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}